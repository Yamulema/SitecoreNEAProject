@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Neambc.Seiumb.Feature.Forms

@model Neambc.Seiumb.Feature.Forms.Models.RetrievePasswordModel
@{ 
    string styleForm = Model.Submitted ? "display: none;":"";
    bool hasErrorUserName = ViewData.ModelState.Values.Count == 1 ? ViewData.ModelState.Values.ElementAt(0).Errors.Count > 0 : false;
    string userNamePlaceholder = Model.Item[Templates.RetrievePassword.Fields.UsernamePlaceholder];
}


<div id="password_retrival_content" class="row">
    <div class="show-for-medium medium-1 large-1 columns">
        &nbsp;
    </div>
    <div id="registrationMainForm" class="float-center small-12 medium-10 large-10 columns">

        <h4>@Html.Sitecore().Field(Templates.RetrievePassword.Fields.Headline, Model.Item)</h4>
        <hr>
@if (!Model.Submitted || (Model.Submitted && !Model.IsUsernameValid))
{
        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.Subheadline, Model.Item)
}

        <form id="frmFgtPass" method="post" action="" data-abide="x3loev-abide" novalidate="" >
            <div class="float-left small-12 medium-12 large-12 columns">
                <div class="row">
                    <div class="messages">
                        @if (Model.Submitted)
                        {
                            if (Model.IsUsernameValid)
                            {
	                            <div class="error-username" style="font-weight: bold;">

                                @if (Model.SendEmail)
                                {
                                        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.Sucess, Model.Item)
                                }
                                else
                                {
                                        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.ValidToken, Model.Item)
                                }
	                            </div>
                            }
                            else
                            {
                                <div class="error-username" style="color:red;">
                                    <br>
                                    <p id="resetPasswordErrMessage">@Html.Sitecore().Field(Templates.RetrievePassword.Fields.NotFound, Model.Item)</p>
                                </div>
                            }
                        }

                    </div>
                    <div id="forgot-fields" class="submitDivFgt row">
                        <div class="small-12 medium-8 large-8 columns columns">

                            @if (!Model.Submitted || (Model.Submitted && !Model.IsUsernameValid))
                            {

                            <div id="fields-username" class="row">
                                <div class="small-12 medium-3 large-3 columns columns">
                                    <label for="username_field" class="text-left bottom">@Html.Sitecore().Field(Templates.RetrievePassword.Fields.UsernameLabel, Model.Item)</label>
                                </div>
                                <div class="formInputsFgt small-12 medium-7 large-7 columns">
                                    @Html.TextBoxFor(x => x.UserName, null, new
                               {
                                   @id = "username_field",
                                   @data_validator = "myEmailValidator onFocusOutEmailValidator",
                                   @required = "true",
                                   @onkeyup = "onKeyPressEmailValidator(this)",
                                   @placeholder = @HttpUtility.HtmlDecode(userNamePlaceholder)
                               })
                                    <span id="required-username_field" style='display: none;' class="custom-form-error">
                                        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.Email_Empty, Model.Item)
                                    </span>
                                    <span id="max-characters-username_field" style='display: none;' class="custom-form-error">
                                        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.Email_CharactersLimit, Model.Item)
                                    </span>
                                    <span id="invalid-format-username_field" style='display: none;' class="custom-form-error">
                                        @Html.Sitecore().Field(Templates.RetrievePassword.Fields.Email_InvalidFormat, Model.Item)
                                    </span>
                                    @if(Model.HasErrorEmail)
									{
										<div id="fnameError" class="server-error">
											@Html.Sitecore().Field(Templates.RetrievePassword.Fields.Email_InvalidFormat, Model.Item)																														
										</div>
									}
                                </div>
                                <div class="show-for-medium medium-2 large-2 columns columns">
                                </div>
                            </div>
                            <input type="hidden" name="fhController" value="ForgotPasswordController" data-abide-ignore />
                            <input type="hidden" name="fhAction" value="ForgotPassword" data-abide-ignore />
                            
                            <div class="row">
                                <div class="small-12 columns buttonContainer">

                                    <button id="forgot-submit" class="button" type="submit">@Html.Sitecore().Field(Templates.RetrievePassword.Fields.SubmitButton, Model.Item)</button>
                                </div>
                            </div>

                            <div class="alert callout hide">

                            </div>
                            }



                        </div>

                        <div class="show-for-medium medium-4 large-4 columns columns">
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="show-for-medium medium-1 large-1 columns">
        &nbsp;
    </div>
</div>
