@using Neambc.Seiumb.Feature.Forms
@using Neambc.Seiumb.Foundation.Authentication.Repositories
@using Neambc.Seiumb.Foundation.Authentication.Constants
@using Neambc.Seiumb.Feature.Forms.Enums
@using Sitecore.Foundation.SitecoreExtensions.Extensions

@model Neambc.Seiumb.Feature.Forms.Models.PasswordFormModel

@{ 
    var currentPasswordPlaceholder= Model.Item.Fields[Templates.ProfileTemplate.Fields.CurrentPassword_Placeholder].Value;
    var newPasswordPlaceholder = Model.Item.Fields[Templates.ProfileTemplate.Fields.NewPassword_Placeholder].Value;
    var confirmNewPasswordPlaceholder = Model.Item.Fields[Templates.ProfileTemplate.Fields.ConfirmNewPassword_Placeholder].Value;
}
<div class="row">
    <div id="accountForm" class="small-12 medium-12 large-12 columns float-center">
        <form method="post" id="username-form" action="" data-abide novalidate>
            <div class="small-12 medium-9 large-9 columns">
                <div class="row">
                    <fieldset class="fieldset">

                        <h4>@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordHeadline, Model.Item)</h4>
                        <span>@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordSubheadline, Model.Item)</span>
                        <hr>
                        <div class="row">
                            <div class="small-12 medium-4 large-4 columns">
                                <label for="current_password" class="text-left bottom">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.CurrentPassword_Label, Model.Item)</label>
                            </div>
                            <div class="small-12 medium-6 large-6 columns">
                                @Html.TextBoxFor(x => x.CurrentPassword, null, new
                           {
                               @id = "current_password",
                               @type = "password",
                               @placeholder = @HttpUtility.HtmlDecode(currentPasswordPlaceholder),
                               @required = "true"
                           })
                                <div class="server-error">
                                    @if (Model.HasErrorCurrentPasswordInvalidCharacters)
                                    { 
                                        @Html.Sitecore().Field(Templates.ProfileTemplate.Fields.InvalidCharacters, Model.Item)
                                    }
                                    else if (Model.Errors != null && Model.Errors.Count > 0)
                                    {
                                        if (Model.Errors.Contains(ProfileErrors.PASSWORD_DONT_MATCH))
                                        {
                                            @Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordError, Model.Item)
                                        }
                                    }
                                </div>
                                <span class="form-error">
                                    @Html.Sitecore().Field(Templates.ProfileTemplate.Fields.CurrentPassword_ErrorMessage, Model.Item)
                                </span>
                            </div>
                            <div style="padding-top: 5px;" class="show-for-medium medium-2 large-2 columns">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 medium-4 large-4 columns">
                                <label for="newPassword" class="text-left bottom">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.NewPassword_Label, Model.Item)</label>
                            </div>
                            <div class="small-12 medium-6 large-6 columns">
                                @Html.TextBoxFor(x => x.NewPassword, null, new
                           {
                               @id = "newPassword",
                               @type = "password",
                               @onkeyup = "onKeyPressPasswordValidator(this, 'username-form')",
                               @onblur = "hidePasswordMessage();dataEqual(this,'confirmPassword','username-form');showMissMatchFieldMessage('newPassword', 'confirmPassword')",
                               @onclick = "showPasswordMessage()",
                               @placeholder = @HttpUtility.HtmlDecode(newPasswordPlaceholder),
                               @data_validator = "passwordValidator",
                               @required = "true"
                           })
                            </div>
                            <div style="padding-top: 5px;" class="show-for-medium medium-2 large-2 columns">
                                <small id='valid-newPassword' style="display: none;">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.ValidPassword, Model.Item)</small>
                                <small id='invalid-newPassword' style="display: none;">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.InvalidPassword, Model.Item)</small>
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 medium-4 large-4 columns">
                                <label for="confirm_new_password" class="text-left bottom">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.ConfirmNewPassword_Label, Model.Item)</label>
                            </div>
                            <div class="small-12 medium-6 large-6 columns">
                                @Html.TextBoxFor(x => x.ConfirmNewPassword, null, new
                           {
                               @id = "confirmPassword",
                               @type = "password",
                               @onkeyup = "onKeyPressPasswordValidator(this, 'username-form')",
                               @onblur = "hidePasswordMessage();showMissMatchFieldMessage('newPassword', 'confirmPassword')",
                               @onclick = "showPasswordMessage()",
                               @placeholder = @HttpUtility.HtmlDecode(confirmNewPasswordPlaceholder),
                               @data_validator = "passwordValidator",
                               @data_equalto = "newPassword",
                               @required = "true"
                           })
                                <span id="missMatch-confirmPassword" style='display: none;' class="custom-form-error">
                                    @Html.Sitecore().Field(Templates.ProfileTemplate.Fields.ConfirmNewPassword_ErrorMessage, Model.Item)
                                </span>
                            </div>
                            <div style="padding-top: 5px;" class="show-for-medium medium-2 large-2 columns columns">
                                <small id='valid-confirmPassword' style="display: none;">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.ValidPassword,Model.Item)</small>
                                <small id='invalid-confirmPassword' style="display: none;">@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.InvalidPassword, Model.Item)</small>
                            </div>
                        </div>
                        <div class="row">
                            <div id="messagePassword" style="display: none;" class="small-12 medium-12 large-12 columns">
                                <small style='color: red;'>@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordRequirements, Model.Item)</small>
                            </div>
                        </div>
                        <div class="row">
                            <span class="form-error">
                            </span>
                        </div>
                        <input type="hidden" name="fhController" value="PasswordFormController" data-abide-ignore />
                        <input type="hidden" name="fhAction" value="PasswordForm" data-abide-ignore />
                        <div class="row">
                            <div class="small-12 columns buttonContainer">
                                <input id="btnAccountForm" class="button" 
                                       onmousedown="hideAllServerErrors();submitForm(this,'username-form');" 
                                       type="submit" value="@Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordSubmitButton, Model.Item)"/>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            <div class="show-for-medium medium-3 large-3 columns">
                <div class="row">
                    <fieldset id="quick-links" class="fieldset buttonContainer">
                        @Html.Sitecore().Field(Templates.ProfileTemplate.Fields.PasswordQuickLinks, Model.Item)                        
                    </fieldset>
                </div>                
            </div>
        </form>
    </div>
</div>

