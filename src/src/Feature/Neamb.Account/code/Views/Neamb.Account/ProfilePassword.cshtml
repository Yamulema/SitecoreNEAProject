@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Neambc.Neamb.Feature.Account
@using Neambc.Neamb.Foundation.Config.Models

@model Neambc.Neamb.Feature.Account.Models.ProfileDTO

@{
    var classname = Model.HasGeneralError ? "show" : "";
    bool isExperienceEditor = Sitecore.Context.PageMode.IsExperienceEditor || Sitecore.Context.PageMode.IsPreview;
}

<section class="error-bar @classname">
    <p>
        @Html.Sitecore().Field(Templates.ProfilePassword.Fields.Error, Model.Item)
        <i aria-hidden="true" class="fa fa-times"></i>
    </p>
</section>

@if (String.IsNullOrEmpty(Model.Email) && !isExperienceEditor)
{
<section class="section-normal">
    <div class="container">
        @Html.Sitecore().Field(Templates.ProfilePassword.Fields.AnonymousUser, Model.Item)
    </div>
</section>
}
else
{
    var optInValue = "";
    if (!String.IsNullOrEmpty(Model.EmailPermission) && Model.EmailPermission.Equals("5"))
    {
        optInValue = "checked";
    }

<section class="new-design form col-centered">
    <div class="col-xs-12">
        <form id="update-profile" method="post" accept-charset="UTF-8" role="form" autocomplete="off">
            <div class="row flex-row step-header">
                <div class="col-xs-7 col-md-9">
                    <h5>@Model.UserFullName</h5>
                    <p>
                        @Model.UserMemberSince
                    </p>
                </div>
                <div class="col-xs-5 col-md-3 avatar-panel">
                    @if (String.IsNullOrEmpty(Model.ImageAvatar))
                        {
                    @Html.Sitecore().Field(Templates.SiteSettings.Fields.HeaderAvatar, Model.SiteSettings, new { @class = "avatar" })
                        }
                        else
                        {
                    <img src="@Model.ImageAvatar" alt="" class="avatar" />
                        }
                    <a href="@Model.UpdateAvatarLink" class="form-link">@Html.Sitecore().Field(Templates.ProfilePassword.Fields.AvatarButton, Model.Item)</a>
                </div>
            </div>
            <div class="form-section">
                <div class="section-name">
                    Profile Information
                    <span class="line"></span>
                </div>
                @Html.Partial("~/Views/Neamb.Account/_Profile.cshtml", Model)
            </div>
            <div class="form-section">
                <label class="custom-checkbox blue">
                    <input class="ignore" name="optIn" type="checkbox" value="true" @optInValue /><span class="checkmark"></span>
                    <span class="check-text">
                        @Html.Sitecore().Field(Templates.ProfilePassword.Fields.Optin, Model.Item)
                    </span>
                </label>
                <button type="submit" class="btn btn-new btn-outline-default m-t-md">
                    @Html.Sitecore().Field(Templates.ProfilePassword.Fields.ProfileSubmit, Model.Item, new { @DisableWebEdit = true })
                    <i style="display: none;" class="fa fa-spinner fa-spin"></i>
                </button>
                <input type="hidden" name="fhController" value="ProfileController" data-abide-ignore />
                <input type="hidden" name="fhAction" value="ProfilePassword" data-abide-ignore />
            </div>
        </form>

        <form id="update-password" method="post" accept-charset="UTF-8" role="form" autocomplete="off">
            <div class="form-section">
                <div class="section-name">
                    @Html.Sitecore().Field(Templates.ProfilePassword.Fields.PasswordSectionHeader, Model.Item)
                    <span class="line"></span>
                </div>
                <div class="floating-section m-t-lg">
                    <div class="floating-group">
                        <input id="currentpassword" name="currentpassword" type="password" placeholder="Current Password"
                               required="required" data-msg-required="@Html.Sitecore().Field(Templates.ChangePassword.Fields.CurrentPasswordEmpty, Model.Item, new { DisableWebEdit = true })" />
                        <label for="currentpassword">@Html.Sitecore().Field(Templates.ChangePassword.Fields.CurrentPasswordLabel, Model.Item)</label>
                        <div class="eye-wrapper showPassword">
                            <span class="eye-icon"></span>
                        </div>
                    </div>
                    <div class="floating-messages">
                        <div class="floating-error-messages">
                            @if (Model.HasErrorPassword)
                                {
                            <div class="server-error">
                                @Html.Sitecore().Field(Templates.ChangePassword.Fields.CurrentPasswordInvalid, Model.Item)
                            </div>
                                }
                        </div>
                        @if (!String.IsNullOrEmpty(Model.Item[Templates.ChangePassword.Fields.CurrentPasswordTooltip]))
                            {
                        <div class="floating-info-messages">
                            @Html.Sitecore().Field(Templates.ChangePassword.Fields.CurrentPasswordTooltip, Model.Item, new { DisableWebEdit = true })
                        </div>
                            }
                    </div>
                </div>
                <div class="floating-section">
                    <div class="floating-group">
                        <input id="password" name="newPassword" type="password" placeholder="Password" required="required"
                               data-msg-required="@Html.Sitecore().Field(Templates.ChangePassword.Fields.RequiredPassword, Model.Item, new { DisableWebEdit = true })"
                               data-rule-minlength="8"
                               data-msg-minlength="@Html.Sitecore().Field(Templates.ChangePassword.Fields.MinimumCharacterCount, Model.Item, new { DisableWebEdit = true })"
                               data-rule-strongpassword="true"
                               data-msg-strongpassword="@Html.Sitecore().Field(Templates.ChangePassword.Fields.NoSpecialCharactersError, Model.Item, new { DisableWebEdit = true })" />
                        <label for="password">@Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordLabel, Model.Item)</label>
                        <div class="eye-wrapper showPassword">
                            <span class="eye-icon"></span>
                        </div>
                    </div>
                    <div class="floating-messages">
                        <div class="floating-error-messages"></div>
                        @if (!String.IsNullOrEmpty(Model.Item[Templates.ChangePassword.Fields.NewPasswordRequirements]))
                            {
                        <div class="floating-info-messages">
                            @Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordRequirements, Model.Item)
                        </div>
                            }
                    </div>
                </div>
                <div class="floating-section">
                    <div class="floating-group">
                        <input id="confirmPassword" name="confirmPassword" type="password" placeholder="Confirm password"
                               required="required"
                               data-msg-required="@Html.Sitecore().Field(Templates.ChangePassword.Fields.ConfirmationMessage, Model.Item, new { DisableWebEdit = true })"
                               data-rule-equalto="#password"
                               data-msg-equalto="@Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordMismatch, Model.Item, new { DisableWebEdit = true })" />
                        <label for="confirmPassword">@Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordConfirmLabel, Model.Item)</label>
                        <div class="eye-wrapper showPassword">
                            <span class="eye-icon"></span>
                        </div>
                    </div>
                    <div class="floating-messages">
                        <div class="floating-error-messages">
                            @if (Model.ErrorsNewPassword.Contains(ErrorStatusEnum.PasswordRequirement))
                                {
                            <div class="server-error">
                                @Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordRequirements, Model.Item)
                            </div>
                                }
                            @if (Model.ErrorsNewPassword.Contains(ErrorStatusEnum.PasswordNotEqual))
                                {
                            <div class="server-error">
                                @Html.Sitecore().Field(Templates.ChangePassword.Fields.NewPasswordMismatch, Model.Item)
                            </div>
                                }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-section">
                <div class="form-section">
                    <input type="hidden" name="fhController" value="ProfileController" data-abide-ignore />
                    <input type="hidden" name="fhAction" value="ProfilePassword" data-abide-ignore />
                    <input type="hidden" name="isFormPassword" value="1" data-abide-ignore />
                    <button type="submit" class="btn btn-new btn-outline-default m-t-sm">
                        @Html.Sitecore().Field(Templates.ProfilePassword.Fields.PasswordSubmit, Model.Item, new { DisableWebEdit = true })
                        <i style="display: none;" class="fa fa-spinner fa-spin"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</section>
}

@if (Model.ProcessedSucessfully && !Model.HasGeneralError && !Model.IsUpdatingPassword)
{
<script type="text/javascript">
        $(document).ready(function () {
			@Html.Raw(Model.GtmAction)
			$('#profileModal').modal('show');
		})
</script>
<div id="profileModal" tabindex="-1" role="dialog" aria-labelledby="profileModalLabel" class="modal fade modalForms">
    <div role="document" class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="closemodal" data-dismiss="modal" aria-label="Close" class="close"><span aria-hidden="true">&times;</span></button>
            </div>
            @Html.Sitecore().Field(Templates.ProfilePassword.Fields.SuccessProfileModal, Model.Item)
        </div>
    </div>
</div>
}

@if (Model.ProcessedSucessfully && !Model.HasGeneralError && Model.IsUpdatingPassword)
{
<script type="text/javascript">
        $(document).ready(function () {
			@Html.Raw(Model.GtmAction)
            $('#profileModalpassword').modal('show');
		})
</script>
<div id="profileModalpassword" tabindex="-1" role="dialog" aria-labelledby="profileModalLabel" class="modal fade modalForms">
    <div role="document" class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="closemodal" data-dismiss="modal" aria-label="Close" class="close"><span aria-hidden="true">&times;</span></button>
            </div>
            @Html.Sitecore().Field(Templates.ProfilePassword.Fields.SuccessPasswordModal, Model.Item)
        </div>
    </div>
</div>
}