//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neambc.Seiumb.Foundation.WebServices.org.neambc.elegibility {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="seiumbSoap11Binding", Namespace="http://seiumb.webservices")]
    public partial class seiumb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback productEligibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdsid2mdsuserdataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public seiumb() {
            this.Url = global::Neambc.Seiumb.Foundation.WebServices.Properties.Settings.Default.Neambc_Seiumb_Foundation_WebServices_org_neambc_elegibility_seiumb;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event productEligibilityCompletedEventHandler productEligibilityCompleted;
        
        /// <remarks/>
        public event mdsid2mdsuserdataCompletedEventHandler mdsid2mdsuserdataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:productEligibility", RequestNamespace="http://seiumb.webservices", ResponseNamespace="http://seiumb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string productEligibility([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("productEligibility", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void productEligibilityAsync(string mdsid, string partner, string key) {
            this.productEligibilityAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void productEligibilityAsync(string mdsid, string partner, string key, object userState) {
            if ((this.productEligibilityOperationCompleted == null)) {
                this.productEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnproductEligibilityOperationCompleted);
            }
            this.InvokeAsync("productEligibility", new object[] {
                        mdsid,
                        partner,
                        key}, this.productEligibilityOperationCompleted, userState);
        }
        
        private void OnproductEligibilityOperationCompleted(object arg) {
            if ((this.productEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.productEligibilityCompleted(this, new productEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:mdsid2mdsuserdata", RequestNamespace="http://seiumb.webservices", ResponseNamespace="http://seiumb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public mdsUserDataObject mdsid2mdsuserdata([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("mdsid2mdsuserdata", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((mdsUserDataObject)(results[0]));
        }
        
        /// <remarks/>
        public void mdsid2mdsuserdataAsync(string mdsid, string partner, string key) {
            this.mdsid2mdsuserdataAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void mdsid2mdsuserdataAsync(string mdsid, string partner, string key, object userState) {
            if ((this.mdsid2mdsuserdataOperationCompleted == null)) {
                this.mdsid2mdsuserdataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmdsid2mdsuserdataOperationCompleted);
            }
            this.InvokeAsync("mdsid2mdsuserdata", new object[] {
                        mdsid,
                        partner,
                        key}, this.mdsid2mdsuserdataOperationCompleted, userState);
        }
        
        private void Onmdsid2mdsuserdataOperationCompleted(object arg) {
            if ((this.mdsid2mdsuserdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdsid2mdsuserdataCompleted(this, new mdsid2mdsuserdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://seiumb.webservices/xsd")]
    public partial class mdsUserDataObject {
        
        private string cityField;
        
        private string currentMemberField;
        
        private string dobField;
        
        private string firstNameField;
        
        private string genderCodeField;
        
        private string lastNameField;
        
        private string localNameField;
        
        private string localNumberField;
        
        private string phoneField;
        
        private string stateCodeField;
        
        private string streetAddressField;
        
        private string zipCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string currentMember {
            get {
                return this.currentMemberField;
            }
            set {
                this.currentMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string genderCode {
            get {
                return this.genderCodeField;
            }
            set {
                this.genderCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string localName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string localNumber {
            get {
                return this.localNumberField;
            }
            set {
                this.localNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string streetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void productEligibilityCompletedEventHandler(object sender, productEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class productEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal productEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void mdsid2mdsuserdataCompletedEventHandler(object sender, mdsid2mdsuserdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdsid2mdsuserdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdsid2mdsuserdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mdsUserDataObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mdsUserDataObject)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591