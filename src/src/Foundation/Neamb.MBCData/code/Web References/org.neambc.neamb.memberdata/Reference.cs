//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neambc.Neamb.Foundation.MBCData.org.neambc.neamb.memberdata {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="memberdataversion2Soap11Binding", Namespace="http://version2.memberdata.webservices")]
    public partial class memberdataversion2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback currentMembershipFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback newMemberCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdsid2iaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSiteRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback matchOnlyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback matchUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdsid2userdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdsid2mdsuserdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback iaid2mdsidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public memberdataversion2() {
            this.Url = global::Neambc.Neamb.Foundation.MBCData.Properties.Settings.Default.Neambc_Neamb_Foundation_MBCData_org_neambc_neamb_memberdata_memberdataversion2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event currentMembershipFlagCompletedEventHandler currentMembershipFlagCompleted;
        
        /// <remarks/>
        public event newMemberCheckCompletedEventHandler newMemberCheckCompleted;
        
        /// <remarks/>
        public event mdsid2iaidCompletedEventHandler mdsid2iaidCompleted;
        
        /// <remarks/>
        public event checkSiteRegistrationCompletedEventHandler checkSiteRegistrationCompleted;
        
        /// <remarks/>
        public event matchOnlyUserCompletedEventHandler matchOnlyUserCompleted;
        
        /// <remarks/>
        public event matchUserCompletedEventHandler matchUserCompleted;
        
        /// <remarks/>
        public event mdsid2userdataCompletedEventHandler mdsid2userdataCompleted;
        
        /// <remarks/>
        public event mdsid2mdsuserdataCompletedEventHandler mdsid2mdsuserdataCompleted;
        
        /// <remarks/>
        public event iaid2mdsidCompletedEventHandler iaid2mdsidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:currentMembershipFlag", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string currentMembershipFlag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("currentMembershipFlag", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void currentMembershipFlagAsync(string mdsid, string partner, string key) {
            this.currentMembershipFlagAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void currentMembershipFlagAsync(string mdsid, string partner, string key, object userState) {
            if ((this.currentMembershipFlagOperationCompleted == null)) {
                this.currentMembershipFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OncurrentMembershipFlagOperationCompleted);
            }
            this.InvokeAsync("currentMembershipFlag", new object[] {
                        mdsid,
                        partner,
                        key}, this.currentMembershipFlagOperationCompleted, userState);
        }
        
        private void OncurrentMembershipFlagOperationCompleted(object arg) {
            if ((this.currentMembershipFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.currentMembershipFlagCompleted(this, new currentMembershipFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:newMemberCheck", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public newMemberObject newMemberCheck([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("newMemberCheck", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((newMemberObject)(results[0]));
        }
        
        /// <remarks/>
        public void newMemberCheckAsync(string mdsid, string partner, string key) {
            this.newMemberCheckAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void newMemberCheckAsync(string mdsid, string partner, string key, object userState) {
            if ((this.newMemberCheckOperationCompleted == null)) {
                this.newMemberCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewMemberCheckOperationCompleted);
            }
            this.InvokeAsync("newMemberCheck", new object[] {
                        mdsid,
                        partner,
                        key}, this.newMemberCheckOperationCompleted, userState);
        }
        
        private void OnnewMemberCheckOperationCompleted(object arg) {
            if ((this.newMemberCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newMemberCheckCompleted(this, new newMemberCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:mdsid2iaid", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string mdsid2iaid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("mdsid2iaid", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mdsid2iaidAsync(string mdsid, string partner, string key) {
            this.mdsid2iaidAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void mdsid2iaidAsync(string mdsid, string partner, string key, object userState) {
            if ((this.mdsid2iaidOperationCompleted == null)) {
                this.mdsid2iaidOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmdsid2iaidOperationCompleted);
            }
            this.InvokeAsync("mdsid2iaid", new object[] {
                        mdsid,
                        partner,
                        key}, this.mdsid2iaidOperationCompleted, userState);
        }
        
        private void Onmdsid2iaidOperationCompleted(object arg) {
            if ((this.mdsid2iaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdsid2iaidCompleted(this, new mdsid2iaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkSiteRegistration", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public checkSiteRegistrationObject checkSiteRegistration([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("checkSiteRegistration", new object[] {
                        email,
                        partner,
                        key});
            return ((checkSiteRegistrationObject)(results[0]));
        }
        
        /// <remarks/>
        public void checkSiteRegistrationAsync(string email, string partner, string key) {
            this.checkSiteRegistrationAsync(email, partner, key, null);
        }
        
        /// <remarks/>
        public void checkSiteRegistrationAsync(string email, string partner, string key, object userState) {
            if ((this.checkSiteRegistrationOperationCompleted == null)) {
                this.checkSiteRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSiteRegistrationOperationCompleted);
            }
            this.InvokeAsync("checkSiteRegistration", new object[] {
                        email,
                        partner,
                        key}, this.checkSiteRegistrationOperationCompleted, userState);
        }
        
        private void OncheckSiteRegistrationOperationCompleted(object arg) {
            if ((this.checkSiteRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSiteRegistrationCompleted(this, new checkSiteRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:matchOnlyUser", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public matchUserObject matchOnlyUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string streetAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string stateCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("matchOnlyUser", new object[] {
                        firstName,
                        lastName,
                        streetAddress,
                        city,
                        stateCode,
                        zipCode,
                        email,
                        dob,
                        phone,
                        partner,
                        key});
            return ((matchUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void matchOnlyUserAsync(string firstName, string lastName, string streetAddress, string city, string stateCode, string zipCode, string email, string dob, string phone, string partner, string key) {
            this.matchOnlyUserAsync(firstName, lastName, streetAddress, city, stateCode, zipCode, email, dob, phone, partner, key, null);
        }
        
        /// <remarks/>
        public void matchOnlyUserAsync(string firstName, string lastName, string streetAddress, string city, string stateCode, string zipCode, string email, string dob, string phone, string partner, string key, object userState) {
            if ((this.matchOnlyUserOperationCompleted == null)) {
                this.matchOnlyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatchOnlyUserOperationCompleted);
            }
            this.InvokeAsync("matchOnlyUser", new object[] {
                        firstName,
                        lastName,
                        streetAddress,
                        city,
                        stateCode,
                        zipCode,
                        email,
                        dob,
                        phone,
                        partner,
                        key}, this.matchOnlyUserOperationCompleted, userState);
        }
        
        private void OnmatchOnlyUserOperationCompleted(object arg) {
            if ((this.matchOnlyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matchOnlyUserCompleted(this, new matchOnlyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:matchUser", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public matchUserObject matchUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string streetAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string stateCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("matchUser", new object[] {
                        firstName,
                        lastName,
                        streetAddress,
                        city,
                        stateCode,
                        zipCode,
                        email,
                        dob,
                        phone,
                        partner,
                        key});
            return ((matchUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void matchUserAsync(string firstName, string lastName, string streetAddress, string city, string stateCode, string zipCode, string email, string dob, string phone, string partner, string key) {
            this.matchUserAsync(firstName, lastName, streetAddress, city, stateCode, zipCode, email, dob, phone, partner, key, null);
        }
        
        /// <remarks/>
        public void matchUserAsync(string firstName, string lastName, string streetAddress, string city, string stateCode, string zipCode, string email, string dob, string phone, string partner, string key, object userState) {
            if ((this.matchUserOperationCompleted == null)) {
                this.matchUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatchUserOperationCompleted);
            }
            this.InvokeAsync("matchUser", new object[] {
                        firstName,
                        lastName,
                        streetAddress,
                        city,
                        stateCode,
                        zipCode,
                        email,
                        dob,
                        phone,
                        partner,
                        key}, this.matchUserOperationCompleted, userState);
        }
        
        private void OnmatchUserOperationCompleted(object arg) {
            if ((this.matchUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matchUserCompleted(this, new matchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:mdsid2userdata", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public userDataObject mdsid2userdata([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("mdsid2userdata", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((userDataObject)(results[0]));
        }
        
        /// <remarks/>
        public void mdsid2userdataAsync(string mdsid, string partner, string key) {
            this.mdsid2userdataAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void mdsid2userdataAsync(string mdsid, string partner, string key, object userState) {
            if ((this.mdsid2userdataOperationCompleted == null)) {
                this.mdsid2userdataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmdsid2userdataOperationCompleted);
            }
            this.InvokeAsync("mdsid2userdata", new object[] {
                        mdsid,
                        partner,
                        key}, this.mdsid2userdataOperationCompleted, userState);
        }
        
        private void Onmdsid2userdataOperationCompleted(object arg) {
            if ((this.mdsid2userdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdsid2userdataCompleted(this, new mdsid2userdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:mdsid2mdsuserdata", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public mdsUserDataObject mdsid2mdsuserdata([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("mdsid2mdsuserdata", new object[] {
                        mdsid,
                        partner,
                        key});
            return ((mdsUserDataObject)(results[0]));
        }
        
        /// <remarks/>
        public void mdsid2mdsuserdataAsync(string mdsid, string partner, string key) {
            this.mdsid2mdsuserdataAsync(mdsid, partner, key, null);
        }
        
        /// <remarks/>
        public void mdsid2mdsuserdataAsync(string mdsid, string partner, string key, object userState) {
            if ((this.mdsid2mdsuserdataOperationCompleted == null)) {
                this.mdsid2mdsuserdataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmdsid2mdsuserdataOperationCompleted);
            }
            this.InvokeAsync("mdsid2mdsuserdata", new object[] {
                        mdsid,
                        partner,
                        key}, this.mdsid2mdsuserdataOperationCompleted, userState);
        }
        
        private void Onmdsid2mdsuserdataOperationCompleted(object arg) {
            if ((this.mdsid2mdsuserdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdsid2mdsuserdataCompleted(this, new mdsid2mdsuserdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:iaid2mdsid", RequestNamespace="http://version2.memberdata.webservices", ResponseNamespace="http://version2.memberdata.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string iaid2mdsid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string iaid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("iaid2mdsid", new object[] {
                        iaid,
                        partner,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void iaid2mdsidAsync(string iaid, string partner, string key) {
            this.iaid2mdsidAsync(iaid, partner, key, null);
        }
        
        /// <remarks/>
        public void iaid2mdsidAsync(string iaid, string partner, string key, object userState) {
            if ((this.iaid2mdsidOperationCompleted == null)) {
                this.iaid2mdsidOperationCompleted = new System.Threading.SendOrPostCallback(this.Oniaid2mdsidOperationCompleted);
            }
            this.InvokeAsync("iaid2mdsid", new object[] {
                        iaid,
                        partner,
                        key}, this.iaid2mdsidOperationCompleted, userState);
        }
        
        private void Oniaid2mdsidOperationCompleted(object arg) {
            if ((this.iaid2mdsidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.iaid2mdsidCompleted(this, new iaid2mdsidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://version2.memberdata.webservices/xsd")]
    public partial class newMemberObject {
        
        private string newMemberField;
        
        private string newMemberSegIndField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newMember {
            get {
                return this.newMemberField;
            }
            set {
                this.newMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newMemberSegInd {
            get {
                return this.newMemberSegIndField;
            }
            set {
                this.newMemberSegIndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://version2.memberdata.webservices/xsd")]
    public partial class mdsUserDataObject {
        
        private string cityField;
        
        private string dobField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string genderCodeField;
        
        private string lastNameField;
        
        private string neaMemberField;
        
        private string phoneField;
        
        private string seaNameField;
        
        private string seaNumberField;
        
        private string seiuLocalNameField;
        
        private string seiuLocalNumberField;
        
        private string seiuMemberField;
        
        private string stateCodeField;
        
        private string streetAddressField;
        
        private string zipCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string genderCode {
            get {
                return this.genderCodeField;
            }
            set {
                this.genderCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string neaMember {
            get {
                return this.neaMemberField;
            }
            set {
                this.neaMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seaName {
            get {
                return this.seaNameField;
            }
            set {
                this.seaNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seaNumber {
            get {
                return this.seaNumberField;
            }
            set {
                this.seaNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiuLocalName {
            get {
                return this.seiuLocalNameField;
            }
            set {
                this.seiuLocalNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiuLocalNumber {
            get {
                return this.seiuLocalNumberField;
            }
            set {
                this.seiuLocalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiuMember {
            get {
                return this.seiuMemberField;
            }
            set {
                this.seiuMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string streetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://version2.memberdata.webservices/xsd")]
    public partial class userDataObject {
        
        private string cityField;
        
        private string dobField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string phoneField;
        
        private string sourceField;
        
        private string stateCodeField;
        
        private string streetAddressField;
        
        private string unionidField;
        
        private string zipCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string streetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string unionid {
            get {
                return this.unionidField;
            }
            set {
                this.unionidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://version2.memberdata.webservices/xsd")]
    public partial class matchUserObject {
        
        private string iaidField;
        
        private string mdsidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string iaid {
            get {
                return this.iaidField;
            }
            set {
                this.iaidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mdsid {
            get {
                return this.mdsidField;
            }
            set {
                this.mdsidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://version2.memberdata.webservices/xsd")]
    public partial class checkSiteRegistrationObject {
        
        private string mdsidField;
        
        private string registrationField;
        
        private string webuseridField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mdsid {
            get {
                return this.mdsidField;
            }
            set {
                this.mdsidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string webuserid {
            get {
                return this.webuseridField;
            }
            set {
                this.webuseridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void currentMembershipFlagCompletedEventHandler(object sender, currentMembershipFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class currentMembershipFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal currentMembershipFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void newMemberCheckCompletedEventHandler(object sender, newMemberCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newMemberCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newMemberCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public newMemberObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((newMemberObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void mdsid2iaidCompletedEventHandler(object sender, mdsid2iaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdsid2iaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdsid2iaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void checkSiteRegistrationCompletedEventHandler(object sender, checkSiteRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSiteRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSiteRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkSiteRegistrationObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkSiteRegistrationObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void matchOnlyUserCompletedEventHandler(object sender, matchOnlyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matchOnlyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matchOnlyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public matchUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((matchUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void matchUserCompletedEventHandler(object sender, matchUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matchUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matchUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public matchUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((matchUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void mdsid2userdataCompletedEventHandler(object sender, mdsid2userdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdsid2userdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdsid2userdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDataObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDataObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void mdsid2mdsuserdataCompletedEventHandler(object sender, mdsid2mdsuserdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdsid2mdsuserdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdsid2mdsuserdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mdsUserDataObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mdsUserDataObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void iaid2mdsidCompletedEventHandler(object sender, iaid2mdsidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class iaid2mdsidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal iaid2mdsidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591