//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neambc.Neamb.Foundation.MBCData.org.neambc.neamb.efulfillment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EfulfillmentSoap11Binding", Namespace="http://ws.neamb.org")]
    public partial class Efulfillment : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Efulfillment() {
            this.Url = global::Neambc.Neamb.Foundation.MBCData.Properties.Settings.Default.Neambc_Neamb_Foundation_MBCData_org_neambc_neamb_efulfillment_Efulfillment;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processCompletedEventHandler processCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:process", RequestNamespace="http://ws.neamb.org", ResponseNamespace="http://ws.neamb.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string process(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Product_Item_ID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Description, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Trans_Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_First_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Last_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_DOB, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_MDSID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Address, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_City, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_State, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Zip, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_MemberType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Custom_1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Custom_2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Custom_3, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Custom_4, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Custom_5, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email_TM, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email_Addr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PD_Signed_As, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merge_1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merge_2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merge_3, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merge_4, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merge_5) {
            object[] results = this.Invoke("process", new object[] {
                        Product_Item_ID,
                        PD_Description,
                        PD_Trans_Date,
                        PD_First_Name,
                        PD_Last_Name,
                        PD_DOB,
                        PD_MDSID,
                        PD_Address,
                        PD_City,
                        PD_State,
                        PD_Zip,
                        PD_MemberType,
                        Custom_1,
                        Custom_2,
                        Custom_3,
                        Custom_4,
                        Custom_5,
                        Email_TM,
                        Email_Addr,
                        PD_Signed_As,
                        Merge_1,
                        Merge_2,
                        Merge_3,
                        Merge_4,
                        Merge_5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void processAsync(
                    string Product_Item_ID, 
                    string PD_Description, 
                    string PD_Trans_Date, 
                    string PD_First_Name, 
                    string PD_Last_Name, 
                    string PD_DOB, 
                    string PD_MDSID, 
                    string PD_Address, 
                    string PD_City, 
                    string PD_State, 
                    string PD_Zip, 
                    string PD_MemberType, 
                    string Custom_1, 
                    string Custom_2, 
                    string Custom_3, 
                    string Custom_4, 
                    string Custom_5, 
                    string Email_TM, 
                    string Email_Addr, 
                    string PD_Signed_As, 
                    string Merge_1, 
                    string Merge_2, 
                    string Merge_3, 
                    string Merge_4, 
                    string Merge_5) {
            this.processAsync(Product_Item_ID, PD_Description, PD_Trans_Date, PD_First_Name, PD_Last_Name, PD_DOB, PD_MDSID, PD_Address, PD_City, PD_State, PD_Zip, PD_MemberType, Custom_1, Custom_2, Custom_3, Custom_4, Custom_5, Email_TM, Email_Addr, PD_Signed_As, Merge_1, Merge_2, Merge_3, Merge_4, Merge_5, null);
        }
        
        /// <remarks/>
        public void processAsync(
                    string Product_Item_ID, 
                    string PD_Description, 
                    string PD_Trans_Date, 
                    string PD_First_Name, 
                    string PD_Last_Name, 
                    string PD_DOB, 
                    string PD_MDSID, 
                    string PD_Address, 
                    string PD_City, 
                    string PD_State, 
                    string PD_Zip, 
                    string PD_MemberType, 
                    string Custom_1, 
                    string Custom_2, 
                    string Custom_3, 
                    string Custom_4, 
                    string Custom_5, 
                    string Email_TM, 
                    string Email_Addr, 
                    string PD_Signed_As, 
                    string Merge_1, 
                    string Merge_2, 
                    string Merge_3, 
                    string Merge_4, 
                    string Merge_5, 
                    object userState) {
            if ((this.processOperationCompleted == null)) {
                this.processOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessOperationCompleted);
            }
            this.InvokeAsync("process", new object[] {
                        Product_Item_ID,
                        PD_Description,
                        PD_Trans_Date,
                        PD_First_Name,
                        PD_Last_Name,
                        PD_DOB,
                        PD_MDSID,
                        PD_Address,
                        PD_City,
                        PD_State,
                        PD_Zip,
                        PD_MemberType,
                        Custom_1,
                        Custom_2,
                        Custom_3,
                        Custom_4,
                        Custom_5,
                        Email_TM,
                        Email_Addr,
                        PD_Signed_As,
                        Merge_1,
                        Merge_2,
                        Merge_3,
                        Merge_4,
                        Merge_5}, this.processOperationCompleted, userState);
        }
        
        private void OnprocessOperationCompleted(object arg) {
            if ((this.processCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processCompleted(this, new processCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void processCompletedEventHandler(object sender, processCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591