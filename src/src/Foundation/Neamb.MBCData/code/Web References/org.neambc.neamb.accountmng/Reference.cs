//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neambc.Neamb.Foundation.MBCData.org.neambc.neamb.accountmng {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccountManagementSoap11Binding", Namespace="http://neamb.webservices")]
    public partial class AccountManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestResetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateEmailDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsernameAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateResetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelResetTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountManagement() {
            this.Url = global::Neambc.Neamb.Foundation.MBCData.Properties.Settings.Default.Neambc_Neamb_Foundation_MBCData_org_neambc_neamb_accountmng_AccountManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginUserCompletedEventHandler LoginUserCompleted;
        
        /// <remarks/>
        public event RequestResetTokenCompletedEventHandler RequestResetTokenCompleted;
        
        /// <remarks/>
        public event ChangeUsernameCompletedEventHandler ChangeUsernameCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event AuthenticatePasswordCompletedEventHandler AuthenticatePasswordCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event ValidateEmailDomainCompletedEventHandler ValidateEmailDomainCompleted;
        
        /// <remarks/>
        public event UpdateUserStatusCompletedEventHandler UpdateUserStatusCompleted;
        
        /// <remarks/>
        public event IsUsernameAvailableCompletedEventHandler IsUsernameAvailableCompleted;
        
        /// <remarks/>
        public event DeleteRegistrationCompletedEventHandler DeleteRegistrationCompleted;
        
        /// <remarks/>
        public event ValidateResetTokenCompletedEventHandler ValidateResetTokenCompleted;
        
        /// <remarks/>
        public event RetrieveUserCompletedEventHandler RetrieveUserCompleted;
        
        /// <remarks/>
        public event ForgotUsernameCompletedEventHandler ForgotUsernameCompleted;
        
        /// <remarks/>
        public event CancelResetTokenCompletedEventHandler CancelResetTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:LoginUser", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public LoginUserObject LoginUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cellcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string matchroutineidentifier) {
            object[] results = this.Invoke("LoginUser", new object[] {
                        partner,
                        key,
                        username,
                        password,
                        unionid,
                        cellcode,
                        matchroutineidentifier});
            return ((LoginUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserAsync(string partner, string key, string username, string password, string unionid, string cellcode, string matchroutineidentifier) {
            this.LoginUserAsync(partner, key, username, password, unionid, cellcode, matchroutineidentifier, null);
        }
        
        /// <remarks/>
        public void LoginUserAsync(string partner, string key, string username, string password, string unionid, string cellcode, string matchroutineidentifier, object userState) {
            if ((this.LoginUserOperationCompleted == null)) {
                this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
            }
            this.InvokeAsync("LoginUser", new object[] {
                        partner,
                        key,
                        username,
                        password,
                        unionid,
                        cellcode,
                        matchroutineidentifier}, this.LoginUserOperationCompleted, userState);
        }
        
        private void OnLoginUserOperationCompleted(object arg) {
            if ((this.LoginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:RequestResetToken", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public RequestResetTokenObject RequestResetToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("RequestResetToken", new object[] {
                        partner,
                        key,
                        username,
                        unionid});
            return ((RequestResetTokenObject)(results[0]));
        }
        
        /// <remarks/>
        public void RequestResetTokenAsync(string partner, string key, string username, string unionid) {
            this.RequestResetTokenAsync(partner, key, username, unionid, null);
        }
        
        /// <remarks/>
        public void RequestResetTokenAsync(string partner, string key, string username, string unionid, object userState) {
            if ((this.RequestResetTokenOperationCompleted == null)) {
                this.RequestResetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestResetTokenOperationCompleted);
            }
            this.InvokeAsync("RequestResetToken", new object[] {
                        partner,
                        key,
                        username,
                        unionid}, this.RequestResetTokenOperationCompleted, userState);
        }
        
        private void OnRequestResetTokenOperationCompleted(object arg) {
            if ((this.RequestResetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestResetTokenCompleted(this, new RequestResetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ChangeUsername", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ChangeUsernameObject ChangeUsername([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string oldusername, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newusername, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmusername, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("ChangeUsername", new object[] {
                        partner,
                        key,
                        oldusername,
                        newusername,
                        confirmusername,
                        unionid});
            return ((ChangeUsernameObject)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUsernameAsync(string partner, string key, string oldusername, string newusername, string confirmusername, string unionid) {
            this.ChangeUsernameAsync(partner, key, oldusername, newusername, confirmusername, unionid, null);
        }
        
        /// <remarks/>
        public void ChangeUsernameAsync(string partner, string key, string oldusername, string newusername, string confirmusername, string unionid, object userState) {
            if ((this.ChangeUsernameOperationCompleted == null)) {
                this.ChangeUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUsernameOperationCompleted);
            }
            this.InvokeAsync("ChangeUsername", new object[] {
                        partner,
                        key,
                        oldusername,
                        newusername,
                        confirmusername,
                        unionid}, this.ChangeUsernameOperationCompleted, userState);
        }
        
        private void OnChangeUsernameOperationCompleted(object arg) {
            if ((this.ChangeUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUsernameCompleted(this, new ChangeUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ChangePassword", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ChangePasswordObject ChangePassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currentpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        partner,
                        key,
                        username,
                        currentpassword,
                        newpassword,
                        confirmpassword,
                        unionid});
            return ((ChangePasswordObject)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string partner, string key, string username, string currentpassword, string newpassword, string confirmpassword, string unionid) {
            this.ChangePasswordAsync(partner, key, username, currentpassword, newpassword, confirmpassword, unionid, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string partner, string key, string username, string currentpassword, string newpassword, string confirmpassword, string unionid, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        partner,
                        key,
                        username,
                        currentpassword,
                        newpassword,
                        confirmpassword,
                        unionid}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ResetPassword", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ResetPasswordObject ResetPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        partner,
                        key,
                        username,
                        newpassword,
                        confirmpassword,
                        unionid});
            return ((ResetPasswordObject)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string partner, string key, string username, string newpassword, string confirmpassword, string unionid) {
            this.ResetPasswordAsync(partner, key, username, newpassword, confirmpassword, unionid, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string partner, string key, string username, string newpassword, string confirmpassword, string unionid, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        partner,
                        key,
                        username,
                        newpassword,
                        confirmpassword,
                        unionid}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AuthenticatePassword", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public AuthenticatePasswordObject AuthenticatePassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("AuthenticatePassword", new object[] {
                        partner,
                        key,
                        username,
                        password,
                        unionid});
            return ((AuthenticatePasswordObject)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticatePasswordAsync(string partner, string key, string username, string password, string unionid) {
            this.AuthenticatePasswordAsync(partner, key, username, password, unionid, null);
        }
        
        /// <remarks/>
        public void AuthenticatePasswordAsync(string partner, string key, string username, string password, string unionid, object userState) {
            if ((this.AuthenticatePasswordOperationCompleted == null)) {
                this.AuthenticatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticatePasswordOperationCompleted);
            }
            this.InvokeAsync("AuthenticatePassword", new object[] {
                        partner,
                        key,
                        username,
                        password,
                        unionid}, this.AuthenticatePasswordOperationCompleted, userState);
        }
        
        private void OnAuthenticatePasswordOperationCompleted(object arg) {
            if ((this.AuthenticatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticatePasswordCompleted(this, new AuthenticatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:UpdateUser", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public UpdateUserObject UpdateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, int webuserid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool webuseridSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string streetaddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string statecode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string permissionindicator, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        partner,
                        key,
                        username,
                        webuserid,
                        webuseridSpecified,
                        firstname,
                        lastname,
                        streetaddress,
                        city,
                        statecode,
                        zipcode,
                        dob,
                        phone,
                        permissionindicator,
                        unionid});
            return ((UpdateUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string partner, string key, string username, int webuserid, bool webuseridSpecified, string firstname, string lastname, string streetaddress, string city, string statecode, string zipcode, string dob, string phone, string permissionindicator, string unionid) {
            this.UpdateUserAsync(partner, key, username, webuserid, webuseridSpecified, firstname, lastname, streetaddress, city, statecode, zipcode, dob, phone, permissionindicator, unionid, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(
                    string partner, 
                    string key, 
                    string username, 
                    int webuserid, 
                    bool webuseridSpecified, 
                    string firstname, 
                    string lastname, 
                    string streetaddress, 
                    string city, 
                    string statecode, 
                    string zipcode, 
                    string dob, 
                    string phone, 
                    string permissionindicator, 
                    string unionid, 
                    object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        partner,
                        key,
                        username,
                        webuserid,
                        webuseridSpecified,
                        firstname,
                        lastname,
                        streetaddress,
                        city,
                        statecode,
                        zipcode,
                        dob,
                        phone,
                        permissionindicator,
                        unionid}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:RegisterUser", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public RegisterUserObject RegisterUser(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstname, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastname, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string streetaddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string city, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string statecode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string permissionindicator, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string webusersource, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string campcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cellcode) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        partner,
                        key,
                        firstname,
                        lastname,
                        streetaddress,
                        city,
                        statecode,
                        zipcode,
                        dob,
                        phone,
                        username,
                        password,
                        permissionindicator,
                        webusersource,
                        unionid,
                        campcode,
                        cellcode});
            return ((RegisterUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(
                    string partner, 
                    string key, 
                    string firstname, 
                    string lastname, 
                    string streetaddress, 
                    string city, 
                    string statecode, 
                    string zipcode, 
                    string dob, 
                    string phone, 
                    string username, 
                    string password, 
                    string permissionindicator, 
                    string webusersource, 
                    string unionid, 
                    string campcode, 
                    string cellcode) {
            this.RegisterUserAsync(partner, key, firstname, lastname, streetaddress, city, statecode, zipcode, dob, phone, username, password, permissionindicator, webusersource, unionid, campcode, cellcode, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(
                    string partner, 
                    string key, 
                    string firstname, 
                    string lastname, 
                    string streetaddress, 
                    string city, 
                    string statecode, 
                    string zipcode, 
                    string dob, 
                    string phone, 
                    string username, 
                    string password, 
                    string permissionindicator, 
                    string webusersource, 
                    string unionid, 
                    string campcode, 
                    string cellcode, 
                    object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        partner,
                        key,
                        firstname,
                        lastname,
                        streetaddress,
                        city,
                        statecode,
                        zipcode,
                        dob,
                        phone,
                        username,
                        password,
                        permissionindicator,
                        webusersource,
                        unionid,
                        campcode,
                        cellcode}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ValidateEmailDomain", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ValidateEmailDomainObject ValidateEmailDomain([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("ValidateEmailDomain", new object[] {
                        partner,
                        key,
                        email});
            return ((ValidateEmailDomainObject)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateEmailDomainAsync(string partner, string key, string email) {
            this.ValidateEmailDomainAsync(partner, key, email, null);
        }
        
        /// <remarks/>
        public void ValidateEmailDomainAsync(string partner, string key, string email, object userState) {
            if ((this.ValidateEmailDomainOperationCompleted == null)) {
                this.ValidateEmailDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEmailDomainOperationCompleted);
            }
            this.InvokeAsync("ValidateEmailDomain", new object[] {
                        partner,
                        key,
                        email}, this.ValidateEmailDomainOperationCompleted, userState);
        }
        
        private void OnValidateEmailDomainOperationCompleted(object arg) {
            if ((this.ValidateEmailDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateEmailDomainCompleted(this, new ValidateEmailDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:UpdateUserStatus", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public UpdateUserStatusObject UpdateUserStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string statuscode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("UpdateUserStatus", new object[] {
                        partner,
                        key,
                        statuscode,
                        username,
                        unionid});
            return ((UpdateUserStatusObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserStatusAsync(string partner, string key, string statuscode, string username, string unionid) {
            this.UpdateUserStatusAsync(partner, key, statuscode, username, unionid, null);
        }
        
        /// <remarks/>
        public void UpdateUserStatusAsync(string partner, string key, string statuscode, string username, string unionid, object userState) {
            if ((this.UpdateUserStatusOperationCompleted == null)) {
                this.UpdateUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateUserStatus", new object[] {
                        partner,
                        key,
                        statuscode,
                        username,
                        unionid}, this.UpdateUserStatusOperationCompleted, userState);
        }
        
        private void OnUpdateUserStatusOperationCompleted(object arg) {
            if ((this.UpdateUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserStatusCompleted(this, new UpdateUserStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:IsUsernameAvailable", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public IsUsernameAvailableObject IsUsernameAvailable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username) {
            object[] results = this.Invoke("IsUsernameAvailable", new object[] {
                        partner,
                        key,
                        username});
            return ((IsUsernameAvailableObject)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsernameAvailableAsync(string partner, string key, string username) {
            this.IsUsernameAvailableAsync(partner, key, username, null);
        }
        
        /// <remarks/>
        public void IsUsernameAvailableAsync(string partner, string key, string username, object userState) {
            if ((this.IsUsernameAvailableOperationCompleted == null)) {
                this.IsUsernameAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsernameAvailableOperationCompleted);
            }
            this.InvokeAsync("IsUsernameAvailable", new object[] {
                        partner,
                        key,
                        username}, this.IsUsernameAvailableOperationCompleted, userState);
        }
        
        private void OnIsUsernameAvailableOperationCompleted(object arg) {
            if ((this.IsUsernameAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsernameAvailableCompleted(this, new IsUsernameAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DeleteRegistration", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DeleteRegistrationObject DeleteRegistration([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("DeleteRegistration", new object[] {
                        partner,
                        key,
                        username,
                        unionid});
            return ((DeleteRegistrationObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRegistrationAsync(string partner, string key, string username, string unionid) {
            this.DeleteRegistrationAsync(partner, key, username, unionid, null);
        }
        
        /// <remarks/>
        public void DeleteRegistrationAsync(string partner, string key, string username, string unionid, object userState) {
            if ((this.DeleteRegistrationOperationCompleted == null)) {
                this.DeleteRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRegistrationOperationCompleted);
            }
            this.InvokeAsync("DeleteRegistration", new object[] {
                        partner,
                        key,
                        username,
                        unionid}, this.DeleteRegistrationOperationCompleted, userState);
        }
        
        private void OnDeleteRegistrationOperationCompleted(object arg) {
            if ((this.DeleteRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRegistrationCompleted(this, new DeleteRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ValidateResetToken", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ValidateResetTokenObject ValidateResetToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string resettoken, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("ValidateResetToken", new object[] {
                        partner,
                        key,
                        username,
                        resettoken,
                        unionid});
            return ((ValidateResetTokenObject)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateResetTokenAsync(string partner, string key, string username, string resettoken, string unionid) {
            this.ValidateResetTokenAsync(partner, key, username, resettoken, unionid, null);
        }
        
        /// <remarks/>
        public void ValidateResetTokenAsync(string partner, string key, string username, string resettoken, string unionid, object userState) {
            if ((this.ValidateResetTokenOperationCompleted == null)) {
                this.ValidateResetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResetTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateResetToken", new object[] {
                        partner,
                        key,
                        username,
                        resettoken,
                        unionid}, this.ValidateResetTokenOperationCompleted, userState);
        }
        
        private void OnValidateResetTokenOperationCompleted(object arg) {
            if ((this.ValidateResetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateResetTokenCompleted(this, new ValidateResetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:RetrieveUser", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public RetrieveUserObject RetrieveUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mdsid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("RetrieveUser", new object[] {
                        partner,
                        key,
                        mdsid,
                        unionid});
            return ((RetrieveUserObject)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserAsync(string partner, string key, string mdsid, string unionid) {
            this.RetrieveUserAsync(partner, key, mdsid, unionid, null);
        }
        
        /// <remarks/>
        public void RetrieveUserAsync(string partner, string key, string mdsid, string unionid, object userState) {
            if ((this.RetrieveUserOperationCompleted == null)) {
                this.RetrieveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserOperationCompleted);
            }
            this.InvokeAsync("RetrieveUser", new object[] {
                        partner,
                        key,
                        mdsid,
                        unionid}, this.RetrieveUserOperationCompleted, userState);
        }
        
        private void OnRetrieveUserOperationCompleted(object arg) {
            if ((this.RetrieveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserCompleted(this, new RetrieveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ForgotUsername", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ForgotUsernameObject ForgotUsername([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("ForgotUsername", new object[] {
                        partner,
                        key,
                        firstname,
                        lastname,
                        dob,
                        zipcode,
                        unionid});
            return ((ForgotUsernameObject)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotUsernameAsync(string partner, string key, string firstname, string lastname, string dob, string zipcode, string unionid) {
            this.ForgotUsernameAsync(partner, key, firstname, lastname, dob, zipcode, unionid, null);
        }
        
        /// <remarks/>
        public void ForgotUsernameAsync(string partner, string key, string firstname, string lastname, string dob, string zipcode, string unionid, object userState) {
            if ((this.ForgotUsernameOperationCompleted == null)) {
                this.ForgotUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotUsernameOperationCompleted);
            }
            this.InvokeAsync("ForgotUsername", new object[] {
                        partner,
                        key,
                        firstname,
                        lastname,
                        dob,
                        zipcode,
                        unionid}, this.ForgotUsernameOperationCompleted, userState);
        }
        
        private void OnForgotUsernameOperationCompleted(object arg) {
            if ((this.ForgotUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotUsernameCompleted(this, new ForgotUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:CancelResetToken", RequestNamespace="http://neamb.webservices", ResponseNamespace="http://neamb.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public CancelResetTokenObject CancelResetToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unionid) {
            object[] results = this.Invoke("CancelResetToken", new object[] {
                        partner,
                        key,
                        username,
                        unionid});
            return ((CancelResetTokenObject)(results[0]));
        }
        
        /// <remarks/>
        public void CancelResetTokenAsync(string partner, string key, string username, string unionid) {
            this.CancelResetTokenAsync(partner, key, username, unionid, null);
        }
        
        /// <remarks/>
        public void CancelResetTokenAsync(string partner, string key, string username, string unionid, object userState) {
            if ((this.CancelResetTokenOperationCompleted == null)) {
                this.CancelResetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelResetTokenOperationCompleted);
            }
            this.InvokeAsync("CancelResetToken", new object[] {
                        partner,
                        key,
                        username,
                        unionid}, this.CancelResetTokenOperationCompleted, userState);
        }
        
        private void OnCancelResetTokenOperationCompleted(object arg) {
            if ((this.CancelResetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelResetTokenCompleted(this, new CancelResetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class LoginUserObject {
        
        private string descriptionField;
        
        private string mdsidField;
        
        private string registrationsField;
        
        private string returncodeField;
        
        private string statusField;
        
        private int registrationcountField;
        
        private bool registrationcountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mdsid {
            get {
                return this.mdsidField;
            }
            set {
                this.mdsidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registrations {
            get {
                return this.registrationsField;
            }
            set {
                this.registrationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int registrationcount {
            get {
                return this.registrationcountField;
            }
            set {
                this.registrationcountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool registrationcountSpecified {
            get {
                return this.registrationcountFieldSpecified;
            }
            set {
                this.registrationcountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class CancelResetTokenObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ForgotUsernameObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class RetrieveUserObject {
        
        private string cityField;
        
        private string complifesigndateField;
        
        private string descriptionField;
        
        private string dobField;
        
        private string emailField;
        
        private string emailpermissionField;
        
        private string firstnameField;
        
        private string gendercodeField;
        
        private string iaidField;
        
        private string introlifeenddateField;
        
        private string lastnameField;
        
        private string leanameField;
        
        private string leanumberField;
        
        private string membershipcatcodeField;
        
        private string neacurrentmemberField;
        
        private string neamembershiptypeField;
        
        private string neamembershiptypenameField;
        
        private string newenvindField;
        
        private string newmembersegmentindicatorField;
        
        private string phoneField;
        
        private string registeredField;
        
        private string registrationdateField;
        
        private string returncodeField;
        
        private string seanameField;
        
        private string seanumberField;
        
        private string seiucurrentmemberField;
        
        private string seiulocalnameField;
        
        private string seiulocalnumberField;
        
        private string statecodeField;
        
        private string statusField;
        
        private string streetaddressField;
        
        private string unionidField;
        
        private string webuseridField;
        
        private string zipcodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string complifesigndate {
            get {
                return this.complifesigndateField;
            }
            set {
                this.complifesigndateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailpermission {
            get {
                return this.emailpermissionField;
            }
            set {
                this.emailpermissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string gendercode {
            get {
                return this.gendercodeField;
            }
            set {
                this.gendercodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string iaid {
            get {
                return this.iaidField;
            }
            set {
                this.iaidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string introlifeenddate {
            get {
                return this.introlifeenddateField;
            }
            set {
                this.introlifeenddateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string leaname {
            get {
                return this.leanameField;
            }
            set {
                this.leanameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string leanumber {
            get {
                return this.leanumberField;
            }
            set {
                this.leanumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string membershipcatcode {
            get {
                return this.membershipcatcodeField;
            }
            set {
                this.membershipcatcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string neacurrentmember {
            get {
                return this.neacurrentmemberField;
            }
            set {
                this.neacurrentmemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string neamembershiptype {
            get {
                return this.neamembershiptypeField;
            }
            set {
                this.neamembershiptypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string neamembershiptypename {
            get {
                return this.neamembershiptypenameField;
            }
            set {
                this.neamembershiptypenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newenvind {
            get {
                return this.newenvindField;
            }
            set {
                this.newenvindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newmembersegmentindicator {
            get {
                return this.newmembersegmentindicatorField;
            }
            set {
                this.newmembersegmentindicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registered {
            get {
                return this.registeredField;
            }
            set {
                this.registeredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registrationdate {
            get {
                return this.registrationdateField;
            }
            set {
                this.registrationdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seaname {
            get {
                return this.seanameField;
            }
            set {
                this.seanameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seanumber {
            get {
                return this.seanumberField;
            }
            set {
                this.seanumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiucurrentmember {
            get {
                return this.seiucurrentmemberField;
            }
            set {
                this.seiucurrentmemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiulocalname {
            get {
                return this.seiulocalnameField;
            }
            set {
                this.seiulocalnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seiulocalnumber {
            get {
                return this.seiulocalnumberField;
            }
            set {
                this.seiulocalnumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string statecode {
            get {
                return this.statecodeField;
            }
            set {
                this.statecodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string streetaddress {
            get {
                return this.streetaddressField;
            }
            set {
                this.streetaddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string unionid {
            get {
                return this.unionidField;
            }
            set {
                this.unionidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string webuserid {
            get {
                return this.webuseridField;
            }
            set {
                this.webuseridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ValidateResetTokenObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        private string validField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class DeleteRegistrationObject {
        
        private string deleteconfirmationField;
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deleteconfirmation {
            get {
                return this.deleteconfirmationField;
            }
            set {
                this.deleteconfirmationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class IsUsernameAvailableObject {
        
        private string availableField;
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class UpdateUserStatusObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ValidateEmailDomainObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        private string validField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class RegisterUserObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        private string usernameField;
        
        private string webuseridField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string webuserid {
            get {
                return this.webuseridField;
            }
            set {
                this.webuseridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class UpdateUserObject {
        
        private string descriptionField;
        
        private string newmdsidField;
        
        private string registrationsField;
        
        private string returncodeField;
        
        private string statusField;
        
        private int registrationcountField;
        
        private bool registrationcountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newmdsid {
            get {
                return this.newmdsidField;
            }
            set {
                this.newmdsidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registrations {
            get {
                return this.registrationsField;
            }
            set {
                this.registrationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int registrationcount {
            get {
                return this.registrationcountField;
            }
            set {
                this.registrationcountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool registrationcountSpecified {
            get {
                return this.registrationcountFieldSpecified;
            }
            set {
                this.registrationcountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class AuthenticatePasswordObject {
        
        private string descriptionField;
        
        private string passwordmatchField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string passwordmatch {
            get {
                return this.passwordmatchField;
            }
            set {
                this.passwordmatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ResetPasswordObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ChangePasswordObject {
        
        private string descriptionField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class ChangeUsernameObject {
        
        private string descriptionField;
        
        private string newusernameField;
        
        private string returncodeField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newusername {
            get {
                return this.newusernameField;
            }
            set {
                this.newusernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://neamb.webservices/xsd")]
    public partial class RequestResetTokenObject {
        
        private string descriptionField;
        
        private string firstnameField;
        
        private bool newtokenField;
        
        private bool newtokenFieldSpecified;
        
        private string resettokenField;
        
        private string returncodeField;
        
        private string statusField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public bool newtoken {
            get {
                return this.newtokenField;
            }
            set {
                this.newtokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newtokenSpecified {
            get {
                return this.newtokenFieldSpecified;
            }
            set {
                this.newtokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resettoken {
            get {
                return this.resettokenField;
            }
            set {
                this.resettokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string returncode {
            get {
                return this.returncodeField;
            }
            set {
                this.returncodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoginUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RequestResetTokenCompletedEventHandler(object sender, RequestResetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestResetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestResetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequestResetTokenObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequestResetTokenObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeUsernameCompletedEventHandler(object sender, ChangeUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeUsernameObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeUsernameObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangePasswordObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangePasswordObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResetPasswordObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResetPasswordObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthenticatePasswordCompletedEventHandler(object sender, AuthenticatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticatePasswordObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticatePasswordObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegisterUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegisterUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateEmailDomainCompletedEventHandler(object sender, ValidateEmailDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateEmailDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateEmailDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidateEmailDomainObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidateEmailDomainObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateUserStatusCompletedEventHandler(object sender, UpdateUserStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserStatusObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserStatusObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsUsernameAvailableCompletedEventHandler(object sender, IsUsernameAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsernameAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsernameAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IsUsernameAvailableObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IsUsernameAvailableObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRegistrationCompletedEventHandler(object sender, DeleteRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteRegistrationObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteRegistrationObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateResetTokenCompletedEventHandler(object sender, ValidateResetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateResetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateResetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidateResetTokenObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidateResetTokenObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RetrieveUserCompletedEventHandler(object sender, RetrieveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetrieveUserObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetrieveUserObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ForgotUsernameCompletedEventHandler(object sender, ForgotUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForgotUsernameObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForgotUsernameObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelResetTokenCompletedEventHandler(object sender, CancelResetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelResetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelResetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CancelResetTokenObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CancelResetTokenObject)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591